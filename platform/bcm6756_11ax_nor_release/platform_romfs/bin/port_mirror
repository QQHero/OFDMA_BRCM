#! /bin/sh

# port_mirror_set() :--端口镜像设置
# $1: enable 		:端口镜像使能控制，1开启，0关闭 
# $2: mirror_port	:输入参数，镜像端口号  
# $3: mirrored_ports:输入参数，被镜像端口掩码 
#
#			phyid	-n	-p	mirror_port
# eth0		0x08	0	0	0
# eth1		0x00	1	0	1
# eth2		0x01	1	1	2
# eth3		0x02	1	2	3
# eth4		0x03	1	3	4
#
# eg: 把eth2的数据映射到eth1
# ethswctl -c mirror -o enable -p 0 -x 0x02 -y 0x02 -n 1
#
# -n :1-外置switch, 0-内置switch
# -p :端口号
# -x :输入方向镜像
# -y :输出方向镜像
# -z :是否阻塞非镜像的包，即当前端口的普通包值1后，当前端口不会收发包
#
# 关闭端口镜像
# ethswctl -c mirror -o disable -n 1
# ethswctl -c mirror -o disable -n 0
# 

MAX_PORT_NUM=7

port_mirror_set()
{
	if [ $2 -lt 0 ] || [ $2 -gt $MAX_PORT_NUM ] ; then
		echo "mirror_port $2 invalid."
		exit
	fi

#	mirror_port, mirrored_ports需要根据传入参数做适当运算
	mirror_port=$(($2-3))
	mirrored_ports=$(($3 >> 3))

	if [ $1 -eq 0 ] ; then
		ethswctl -c mirror -o disable -n 1
		ethswctl -c mirror -o disable -n 0
	else
		echo "ethswctl -c mirror -o enable -p $mirror_port -x $mirrored_ports -y $mirrored_ports -n 1"
		ethswctl -c mirror -o enable -p $mirror_port -x $mirrored_ports -y $mirrored_ports -n 1
	fi
}

help()
{
cat << EOF
	port_mirror port_mirror_set <en> <mirror_port> <mirrored_ports>
EOF
}

case $1 in
port_mirror_set)
	port_mirror_set $2 $3 $4;;
*)
	help;;
esac